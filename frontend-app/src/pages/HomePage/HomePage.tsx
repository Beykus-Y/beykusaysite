import React, { useState, useEffect, useRef, useCallback } from 'react';
import { Link } from 'react-router-dom'; // –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫ SPA
import styles from './HomePage.module.css';

// –ò–º–ø–æ—Ä—Ç –∏–∫–æ–Ω–æ–∫ Font Awesome –∏–ª–∏ –¥—Ä—É–≥–∏—Ö, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ñ—É—Ç–µ—Ä–µ
// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
// import { faTwitter, faFacebook, faLinkedin } from '@fortawesome/free-brands-svg-icons'

function HomePage() {
    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
    const heroRef = useRef<HTMLDivElement>(null); // Ref –¥–ª—è –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞

    // --- –õ–æ–≥–∏–∫–∞ –∏–∑ main.js ---

    // 1. –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏—è–º
    const handleNavClick = (event: React.MouseEvent<HTMLAnchorElement>, targetId: string) => {
        // –î–ª—è SPA, –µ—Å–ª–∏ —Å–µ–∫—Ü–∏–∏ –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º scrollIntoView
        // –ï—Å–ª–∏ —ç—Ç–æ Link –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, React Router —Å–¥–µ–ª–∞–µ—Ç —Å–≤–æ–µ –¥–µ–ª–æ
        if (targetId.startsWith('#')) {
            event.preventDefault();
            const targetElement = document.getElementById(targetId.substring(1));
            targetElement?.scrollIntoView({ behavior: 'smooth' });
            setIsMobileMenuOpen(false); // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ
        }
        // –ï—Å–ª–∏ href –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å #, —ç—Ç–æ –±—É–¥–µ—Ç –æ–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ Link,
        // –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–ª–∏ React Router —Å—Ä–∞–±–æ—Ç–∞—é—Ç.
    };

    // 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    const toggleMobileMenu = () => {
        setIsMobileMenuOpen(!isMobileMenuOpen);
    };

    // 3. –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ (Intersection Observer)
    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add(styles.fadeIn || 'fade-in'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞—Å—Å –∏–∑ –º–æ–¥—É–ª—è –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π
                    }
                    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å else { entry.target.classList.remove(...) } –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
                });
            },
            { threshold: 0.1 } // –ü–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è (10% —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–∏–¥–Ω–æ)
        );

        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏. –ò—Å–ø–æ–ª—å–∑—É–µ–º querySelectorAll –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–Ω—É—Ç—Ä–∏ HomePage
        const elementsToObserve = document.querySelectorAll(
            `.${styles.featureCard}, .${styles.priceCard}, .${styles.aboutContent}`
        );
        elementsToObserve.forEach((el) => observer.observe(el));

        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        return () => elementsToObserve.forEach((el) => observer.unobserve(el));
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑

    // 4. –ü–∞—Ä–∞–ª–ª–∞–∫—Å —ç—Ñ—Ñ–µ–∫—Ç (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
    useEffect(() => {
        let ticking = false;
        const handleScroll = () => {
            if (!ticking) {
                window.requestAnimationFrame(() => {
                    const heroElement = heroRef.current; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ref
                    if (heroElement) {
                         const scrolled = window.pageYOffset;
                         // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –≤–∏–¥–∏–º–æ—Å—Ç–∏ viewport, —á—Ç–æ–±—ã –Ω–µ –¥–≤–∏–≥–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
                         if (scrolled < window.innerHeight * 1.5) { // –£–≤–µ–ª–∏—á–∏–º –Ω–µ–º–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω
                             // –£–º–µ–Ω—å—à–∏–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è –º–µ–Ω–µ–µ –≤—ã—Ä–∞–∂–µ–Ω–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
                             heroElement.style.transform = `translateY(${scrolled * 0.2}px)`;
                         }
                    }
                    ticking = false;
                });
                ticking = true;
            }
        };

        window.addEventListener('scroll', handleScroll, { passive: true }); // passive: true –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

        // –û—á–∏—Å—Ç–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        return () => window.removeEventListener('scroll', handleScroll);
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

    // 5. –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    const [contactName, setContactName] = useState('');
    const [contactEmail, setContactEmail] = useState('');
    const [contactMessage, setContactMessage] = useState('');
    const [contactError, setContactError] = useState('');
    const [contactSuccess, setContactSuccess] = useState('');
    const [contactLoading, setContactLoading] = useState(false);

    const handleContactSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        setContactError('');
        setContactSuccess('');
        if (contactLoading) return;

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!contactName || !contactEmail || !contactMessage) {
            setContactError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.'); return;
        }
        if (!emailRegex.test(contactEmail)) {
            setContactError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.'); return;
        }

        setContactLoading(true);
        // --- –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –Ω–∞ –±—ç–∫–µ–Ω–¥ ---
        // –ü—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º fetch (–∑–∞–º–µ–Ω–∏—Ç–µ URL –∏ –º–µ—Ç–æ–¥)
        try {
             console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã:', { name: contactName, email: contactEmail, message: contactMessage });
             // const response = await fetch('/api/contact', {
             //     method: 'POST',
             //     headers: { 'Content-Type': 'application/json' },
             //     body: JSON.stringify({ name: contactName, email: contactEmail, message: contactMessage })
             // });
             // if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã');
             // const result = await response.json();

             // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
             await new Promise(resolve => setTimeout(resolve, 1000));

             setContactSuccess('–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
             // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
             setContactName('');
             setContactEmail('');
             setContactMessage('');
         } catch (err: any) {
             setContactError(err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.');
         } finally {
             setContactLoading(false);
         }
    };

    return (
        <> {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç, —Ç–∞–∫ –∫–∞–∫ —É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ—Ç –µ–¥–∏–Ω–æ–≥–æ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ */}
            <header className={styles.header}>
                {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
                <nav className={styles.nav}>
                    <div className={styles.logo}>BeykuSay</div>
                    {/* –ö–Ω–æ–ø–∫–∞ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é */}
                    <button className={styles.mobileMenuButton} onClick={toggleMobileMenu}>
                        ‚ò∞
                    </button>
                    {/* –°—Å—ã–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
                    <ul className={`${styles.navLinks} ${isMobileMenuOpen ? styles.active : ''}`}>
                        <li><a href="#features" onClick={(e) => handleNavClick(e, '#features')}>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a></li>
                        <li><a href="#about" onClick={(e) => handleNavClick(e, '#about')}>–û –Ω–∞—Å</a></li>
                        <li><a href="#pricing" onClick={(e) => handleNavClick(e, '#pricing')}>–¢–∞—Ä–∏—Ñ—ã</a></li>
                        <li><a href="#contact" onClick={(e) => handleNavClick(e, '#contact')}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                        {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ React Router */}
                        <li><Link to="/auth">–í–æ–π—Ç–∏</Link></li>
                    </ul>
                </nav>
                {/* –°–µ–∫—Ü–∏—è Hero */}
                <div className={styles.hero} ref={heroRef}> {/* –î–æ–±–∞–≤–ª—è–µ–º ref */}
                    <h1>–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å BeykuSay</h1>
                    <p>–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –±–∞–∑–µ –ò–ò –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á</p>
                    {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º Link –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
                    <Link to="/auth" className={styles.ctaButton}>–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ</Link>
                </div>
            </header>

            {/* –°–µ–∫—Ü–∏—è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
            <section id="features" className={styles.features}>
            <h2 className={styles.sectionTitle}>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
                <div className={styles.featuresGrid}>
                    <div className={styles.featureCard}>
                        <i className={styles.featureIcon}>ü§ñ</i>
                        <h3>–£–º–Ω—ã–π –¥–∏–∞–ª–æ–≥</h3>
                        <p>–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞</p>
                    </div>
                    <div className={styles.featureCard}>
                        <i className={styles.featureIcon}>üìä</i>
                        <h3>–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</h3>
                        <p>–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</p>
                    </div>
                    <div className={styles.featureCard}>
                        <i className={styles.featureIcon}>üîí</i>
                        <h3>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                        <p>–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ</p>
                    </div>
                </div>
            </section>

            {/* –°–µ–∫—Ü–∏—è –û –Ω–∞—Å */}
            <section id="about" className={styles.about}>
                <div className={styles.aboutContent}>
                <h2 className={styles.sectionTitle}>–û –Ω–∞—Å</h2>
                    <p>BeykuSay - —ç—Ç–æ –ø–µ—Ä–µ–¥–æ–≤–æ–µ –ò–ò-—Ä–µ—à–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á. –ù–∞—à–∞ –º–∏—Å—Å–∏—è - —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–∞–∂–¥–æ–º—É.</p>
                </div>
            </section>

            {/* –°–µ–∫—Ü–∏—è –¢–∞—Ä–∏—Ñ—ã */}
            <section id="pricing" className={styles.pricing}>
            <h2 className={styles.sectionTitle}>–¢–∞—Ä–∏—Ñ—ã</h2>
                <div className={styles.pricingCards}>
                    <div className={styles.priceCard}>
                        <h3>–ë–∞–∑–æ–≤—ã–π</h3>
                        <p className={styles.price}>‚ÇΩ999/–º–µ—Å</p>
                        <ul>
                            <li>–ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</li>
                            <li>5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å</li>
                            <li>–ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</li>
                        </ul>
                        {/* –ö–Ω–æ–ø–∫–∏ –º–æ–≥—É—Ç –≤–µ—Å—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–ª–∞—Ç—ã */}
                        <Link to="/auth" className={styles.secondaryButton}>–í—ã–±—Ä–∞—Ç—å</Link>
                    </div>
                    <div className={`${styles.priceCard} ${styles.featured}`}>
                        <h3>–ü—Ä–æ</h3>
                        <p className={styles.price}>‚ÇΩ2499/–º–µ—Å</p>
                        <ul>
                            <li>–í—Å–µ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</li>
                            <li>–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã</li>
                            <li>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</li>
                        </ul>
                        <Link to="/auth" className={styles.primaryButton}>–í—ã–±—Ä–∞—Ç—å</Link>
                    </div>
                     {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ç–∞—Ä–∏—Ñ—ã */}
                </div>
            </section>

            {/* –°–µ–∫—Ü–∏—è –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
            <section id="contact" className={styles.contact}>
                <h2>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h2>
                <form className={styles.contactForm} onSubmit={handleContactSubmit}>
                     {contactError && <p style={{ color: 'red' }}>{contactError}</p>}
                     {contactSuccess && <p style={{ color: 'green' }}>{contactSuccess}</p>}
                    <input type="text" placeholder="–í–∞—à–µ –∏–º—è" required
                           value={contactName} onChange={e => setContactName(e.target.value)}
                           disabled={contactLoading}/>
                    <input type="email" placeholder="Email" required autoComplete="email"
                           value={contactEmail} onChange={e => setContactEmail(e.target.value)}
                           disabled={contactLoading}/>
                    <textarea placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ" required
                              value={contactMessage} onChange={e => setContactMessage(e.target.value)}
                              disabled={contactLoading}></textarea>
                    <button type="submit" className={styles.submitButton} disabled={contactLoading}>
                        {contactLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
                    </button>
                </form>
            </section>

            {/* –§—É—Ç–µ—Ä */}
            <footer className={styles.footer}>
                <div className={styles.footerContent}>
                    <div className={styles.footerLogo}>BeykuSay</div>
                    <div className={styles.footerLinks}>
                        {/* –ó–∞–º–µ–Ω–∏—Ç–µ # –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ */}
                        <a href="#">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
                        <a href="#">–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>
                    </div>
                    <div className={styles.socialLinks}>
                        {/* –ó–∞–º–µ–Ω–∏—Ç–µ # –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
                        {/* –ò–∫–æ–Ω–∫–∏ –ª—É—á—à–µ –≤—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ SVG –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É */}
                        <a href="#" aria-label="Twitter"><i className="fab fa-twitter"></i></a>
                        <a href="#" aria-label="Facebook"><i className="fab fa-facebook"></i></a>
                        <a href="#" aria-label="LinkedIn"><i className="fab fa-linkedin"></i></a>
                    </div>
                </div>
            </footer>
        </>
    );
}

export default HomePage;